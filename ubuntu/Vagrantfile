# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/disco64"
  config.disksize.size = '128GB'
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
    vb.name = "ubuntu"
  end
  config.ssh.forward_agent = true
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    # Any bad news and we exit.
    set -e

    # Install Ansible and a minimal UNIX environment.
    sudo apt-add-repository ppa:ansible/ansible
    sudo DEBIAN_FRONTEND=noninteractive apt-get update
    sudo apt-get install -y zsh git vim rsync ansible aptitude

    # Configure SSH for GitHub.

    umask 077

    mkdir -p ~/.ssh

    if [[ ! -e ~/.ssh/known_hosts ]]; then
        touch ~/.ssh/known_hosts
    fi

    # If we have a key for `github.com` already, do nothing.
    if [[ $(ssh-keygen -F github.com | wc -c) -eq 0 ]]; then
        # Get the public key from the `github.com` server.
        key=$(ssh-keyscan -t rsa github.com 2> /dev/null | cut -f3 -d' ')

        # Create a comma delimited list of host ip addresses and the domain.
        hosts=$(echo $(dig -t a +short github.com  | tr '\n' ',')github.com)

        # Write the known host entry with the host list and domain to a temporary
        # file so we can use `ssh-keygen -f` to check the fingerprint.
        tmp=$(mktemp -d)
        trap "rm -rf $tmp" EXIT
        echo "$hosts ssh-rsa $key" >> "$tmp/known_hosts"

        # Get that fingerprint.
        fp=$(ssh-keygen -t rsa -q -l -f "$tmp/known_hosts" -F github.com | cut -f3 -d' ')

        if [[ $fp = "SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8" ]]; then
        # If the fingerprint is good, write the same line to our known hosts file.
            echo "$hosts ssh-rsa $key" >> ~/.ssh/known_hosts
        else
        # If the fingerprint is bad, panic.
            echo 'Bad GitHub SSH fingerprint!' 1>&2
            cat "$tmp/known_hosts" 1>&2
            exit 1
        fi
    fi

    umask 022

    # Check out this project in the home directory.
    if [[ ! -e /home/vagrant/vagrant ]]; then
        git clone -q --recursive git@github.com:bigeasy/vagrant.git /home/vagrant/vagrant
    fi
  SHELL
end
